{"version":3,"sources":["webpack:///../../../src/components/VMenu/index.ts","webpack:///../../../src/components/VChip/VChip.ts","webpack:///../../../src/components/VChip/index.ts","webpack:///../../../src/components/VCheckbox/VSimpleCheckbox.ts","webpack:///../../../src/components/VDivider/index.ts","webpack:///../../../src/components/VSubheader/VSubheader.ts","webpack:///../../../src/components/VSubheader/index.ts","webpack:///../../../src/components/VSelect/VSelectList.ts","webpack:///../../../src/mixins/comparable/index.ts","webpack:///../../../src/mixins/filterable/index.ts","webpack:///../../../src/components/VSelect/VSelect.ts"],"names":["mixins","name","props","active","type","default","activeClass","this","chipGroup","close","closeIcon","disabled","draggable","filter","filterIcon","label","link","outlined","pill","tag","textColor","value","data","proxyClass","computed","classes","groupClasses","hasClose","Boolean","isClickable","created","breakingProps","original","replacement","methods","click","genFilter","children","$createElement","VIcon","staticClass","left","genClose","right","on","e","genContent","$slots","render","tabindex","setBackgroundColor","color","h","setTextColor","functional","directives","ripple","indeterminate","indeterminateIcon","onIcon","offIcon","center","icon","dark","light","class","f","inset","themeClasses","attrs","$listeners","action","dense","hideSelected","items","itemDisabled","String","Array","itemText","itemValue","noDataText","noFilter","searchInput","selectedItems","parsedItems","map","item","tileActiveClass","Object","staticNoDataTile","tile","role","undefined","mousedown","VListItem","genTileContent","genAction","VListItemAction","VSimpleCheckbox","inputValue","input","genDivider","VDivider","genFilteredText","text","getMaskedCharacters","end","start","genHighlight","middle","genHeader","genLabelledBy","getText","split","join","index","genTile","hasItem","getDisabled","$scopedSlots","length","parent","scopedSlot","needsTile","innerHTML","VList","id","domProps","indexOf","getValue","slot","$attrs","valueComparator","defaultMenuProps","closeOnClick","closeOnContentClick","disableKeys","openOnClick","maxHeight","baseMixins","ClickOutside","appendIcon","attach","cacheItems","chips","clearable","deletableChips","eager","itemColor","menuProps","multiple","openOnClear","returnObject","smallChips","cachedItems","content","isBooted","isMenuActive","lastItem","lazyValue","selectedIndex","keyboardLookupPrefix","keyboardLookupLastTime","allItems","filterDuplicates","concat","computedItems","computedOwns","counterValue","isFocused","args","closeConditional","dynamicHeight","hasChips","hasSlot","isDirty","listData","scopeId","$vnode","context","$vuetify","lang","t","select","selectItem","scopedSlots","staticList","console","VSelectList","virtualizedItems","$_menuProps","slice","menuCanShow","normalisedProps","acc","p","nudgeBottom","watch","internalValue","immediate","handler","mounted","$refs","menu","blur","activateMenu","clearableCallback","contains","$el","uniqueValues","arr","val","findExistingIndex","i","genChipSelection","isDisabled","VChip","small","key","JSON","genCommaSelection","last","genDefaultSlot","selections","prefix","genAffix","suffix","genInput","genInputSlot","genList","genListWithSlot","slots","slotName","genMenu","VMenu","ref","genSelections","genSelection","genSlotSelection","selection","selected","readonly","getMenuIndex","onBlur","$emit","onChipInput","setValue","onClick","onEscDown","onKeyPress","KEYBOARD_LOOKUP_THRESHOLD","now","performance","findIndex","setTimeout","onKeyDown","keyCode","onUpDown","onTabDown","onSpaceDown","onMenuActiveChange","onMouseUp","hasMouseDown","appendInner","isEnclosed","onScroll","showMoreItems","scrollHeight","scrollTop","requestAnimationFrame","activeTile","listIndex","setMenuIndex","setSelectedItems","values","v","oldValue"],"mappings":"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","file":"js/chunk-279c0e41.400be753.js","sourcesContent":["import VMenu from './VMenu'\n\nexport { VMenu }\nexport default VMenu\n","// Styles\nimport './VChip.sass'\n\n// Types\nimport { VNode } from 'vue'\nimport mixins from '../../util/mixins'\n\n// Components\nimport { VExpandXTransition } from '../transitions'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport Themeable from '../../mixins/themeable'\nimport { factory as ToggleableFactory } from '../../mixins/toggleable'\nimport Routable from '../../mixins/routable'\nimport Sizeable from '../../mixins/sizeable'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Sizeable,\n  Routable,\n  Themeable,\n  GroupableFactory('chipGroup'),\n  ToggleableFactory('inputValue')\n).extend({\n  name: 'v-chip',\n\n  props: {\n    active: {\n      type: Boolean,\n      default: true,\n    },\n    activeClass: {\n      type: String,\n      default (): string | undefined {\n        if (!this.chipGroup) return ''\n\n        return this.chipGroup.activeClass\n      },\n    } as any as PropValidator<string>,\n    close: Boolean,\n    closeIcon: {\n      type: String,\n      default: '$delete',\n    },\n    disabled: Boolean,\n    draggable: Boolean,\n    filter: Boolean,\n    filterIcon: {\n      type: String,\n      default: '$complete',\n    },\n    label: Boolean,\n    link: Boolean,\n    outlined: Boolean,\n    pill: Boolean,\n    tag: {\n      type: String,\n      default: 'span',\n    },\n    textColor: String,\n    value: null as any as PropValidator<any>,\n  },\n\n  data: () => ({\n    proxyClass: 'v-chip--active',\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-chip': true,\n        ...Routable.options.computed.classes.call(this),\n        'v-chip--clickable': this.isClickable,\n        'v-chip--disabled': this.disabled,\n        'v-chip--draggable': this.draggable,\n        'v-chip--label': this.label,\n        'v-chip--link': this.isLink,\n        'v-chip--no-color': !this.color,\n        'v-chip--outlined': this.outlined,\n        'v-chip--pill': this.pill,\n        'v-chip--removable': this.hasClose,\n        ...this.themeClasses,\n        ...this.sizeableClasses,\n        ...this.groupClasses,\n      }\n    },\n    hasClose (): boolean {\n      return Boolean(this.close)\n    },\n    isClickable (): boolean {\n      return Boolean(\n        Routable.options.computed.isClickable.call(this) ||\n        this.chipGroup\n      )\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['outline', 'outlined'],\n      ['selected', 'input-value'],\n      ['value', 'active'],\n      ['@input', '@active.sync'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    click (e: MouseEvent): void {\n      this.$emit('click', e)\n\n      this.chipGroup && this.toggle()\n    },\n    genFilter (): VNode {\n      const children = []\n\n      if (this.isActive) {\n        children.push(\n          this.$createElement(VIcon, {\n            staticClass: 'v-chip__filter',\n            props: { left: true },\n          }, this.filterIcon)\n        )\n      }\n\n      return this.$createElement(VExpandXTransition, children)\n    },\n    genClose (): VNode {\n      return this.$createElement(VIcon, {\n        staticClass: 'v-chip__close',\n        props: {\n          right: true,\n        },\n        on: {\n          click: (e: Event) => {\n            e.stopPropagation()\n\n            this.$emit('click:close')\n            this.$emit('update:active', false)\n          },\n        },\n      }, this.closeIcon)\n    },\n    genContent (): VNode {\n      return this.$createElement('span', {\n        staticClass: 'v-chip__content',\n      }, [\n        this.filter && this.genFilter(),\n        this.$slots.default,\n        this.hasClose && this.genClose(),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.genContent()]\n    let { tag, data } = this.generateRouteLink()\n\n    data.attrs = {\n      ...data.attrs,\n      draggable: this.draggable ? 'true' : undefined,\n      tabindex: this.chipGroup && !this.disabled ? 0 : data.attrs!.tabindex,\n    }\n    data.directives!.push({\n      name: 'show',\n      value: this.active,\n    })\n    data = this.setBackgroundColor(this.color, data)\n\n    const color = this.textColor || (this.outlined && this.color)\n\n    return h(tag, this.setTextColor(color, data), children)\n  },\n})\n","import VChip from './VChip'\n\nexport { VChip }\nexport default VChip\n","import './VSimpleCheckbox.sass'\n\nimport ripple from '../../directives/ripple'\n\nimport Vue, { VNode, VNodeDirective } from 'vue'\nimport { VIcon } from '../VIcon'\n\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport { wrapInArray } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'v-simple-checkbox',\n\n  functional: true,\n\n  directives: {\n    ripple,\n  },\n\n  props: {\n    ...Colorable.options.props,\n    ...Themeable.options.props,\n    disabled: Boolean,\n    ripple: {\n      type: Boolean,\n      default: true,\n    },\n    value: Boolean,\n    indeterminate: Boolean,\n    indeterminateIcon: {\n      type: String,\n      default: '$checkboxIndeterminate',\n    },\n    onIcon: {\n      type: String,\n      default: '$checkboxOn',\n    },\n    offIcon: {\n      type: String,\n      default: '$checkboxOff',\n    },\n  },\n\n  render (h, { props, data }): VNode {\n    const children = []\n\n    if (props.ripple && !props.disabled) {\n      const ripple = h('div', Colorable.options.methods.setTextColor(props.color, {\n        staticClass: 'v-input--selection-controls__ripple',\n        directives: [{\n          name: 'ripple',\n          value: { center: true },\n        }] as VNodeDirective[],\n      }))\n\n      children.push(ripple)\n    }\n\n    let icon = props.offIcon\n    if (props.indeterminate) icon = props.indeterminateIcon\n    else if (props.value) icon = props.onIcon\n\n    children.push(h(VIcon, Colorable.options.methods.setTextColor(props.value && props.color, {\n      props: {\n        disabled: props.disabled,\n        dark: props.dark,\n        light: props.light,\n      },\n    }), icon))\n\n    const classes = {\n      'v-simple-checkbox': true,\n      'v-simple-checkbox--disabled': props.disabled,\n    }\n\n    return h('div', {\n      ...data,\n      class: classes,\n      on: {\n        click: (e: MouseEvent) => {\n          e.stopPropagation()\n\n          if (data.on && data.on.input && !props.disabled) {\n            wrapInArray(data.on.input).forEach(f => f(!props.value))\n          }\n        },\n      },\n    }, children)\n  },\n})\n","import VDivider from './VDivider'\n\nexport { VDivider }\nexport default VDivider\n","// Styles\nimport './VSubheader.sass'\n\n// Mixins\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Themeable\n  /* @vue/component */\n).extend({\n  name: 'v-subheader',\n\n  props: {\n    inset: Boolean,\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-subheader',\n      class: {\n        'v-subheader--inset': this.inset,\n        ...this.themeClasses,\n      },\n      attrs: this.$attrs,\n      on: this.$listeners,\n    }, this.$slots.default)\n  },\n})\n","import VSubheader from './VSubheader'\n\nexport { VSubheader }\nexport default VSubheader\n","// Styles\nimport '../VCard/VCard.sass'\n\n// Components\nimport VSimpleCheckbox from '../VCheckbox/VSimpleCheckbox'\nimport VDivider from '../VDivider'\nimport VSubheader from '../VSubheader'\nimport {\n  VList,\n  VListItem,\n  VListItemAction,\n  VListItemContent,\n  VListItemTitle,\n} from '../VList'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\n\n// Helpers\nimport {\n  escapeHTML,\n  getPropertyFromItem,\n} from '../../util/helpers'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\n/* @vue/component */\nexport default mixins(Colorable, Themeable).extend({\n  name: 'v-select-list',\n\n  // https://github.com/vuejs/vue/issues/6872\n  directives: {\n    ripple,\n  },\n\n  props: {\n    action: Boolean,\n    dense: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>,\n    noDataText: String,\n    noFilter: Boolean,\n    searchInput: {\n      default: null,\n    } as PropValidator<any>,\n    selectedItems: {\n      type: Array,\n      default: () => [],\n    } as PropValidator<any[]>,\n  },\n\n  computed: {\n    parsedItems (): any[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    tileActiveClass (): string {\n      return Object.keys(this.setTextColor(this.color).class || {}).join(' ')\n    },\n    staticNoDataTile (): VNode {\n      const tile = {\n        attrs: {\n          role: undefined,\n        },\n        on: {\n          mousedown: (e: Event) => e.preventDefault(), // Prevent onBlur from being called\n        },\n      }\n\n      return this.$createElement(VListItem, tile, [\n        this.genTileContent(this.noDataText),\n      ])\n    },\n  },\n\n  methods: {\n    genAction (item: object, inputValue: any): VNode {\n      return this.$createElement(VListItemAction, [\n        this.$createElement(VSimpleCheckbox, {\n          props: {\n            color: this.color,\n            value: inputValue,\n          },\n          on: {\n            input: () => this.$emit('select', item),\n          },\n        }),\n      ])\n    },\n    genDivider (props: { [key: string]: any }) {\n      return this.$createElement(VDivider, { props })\n    },\n    genFilteredText (text: string) {\n      text = text || ''\n\n      if (!this.searchInput || this.noFilter) return escapeHTML(text)\n\n      const { start, middle, end } = this.getMaskedCharacters(text)\n\n      return `${escapeHTML(start)}${this.genHighlight(middle)}${escapeHTML(end)}`\n    },\n    genHeader (props: { [key: string]: any }): VNode {\n      return this.$createElement(VSubheader, { props }, props.header)\n    },\n    genHighlight (text: string): string {\n      return `<span class=\"v-list-item__mask\">${escapeHTML(text)}</span>`\n    },\n    genLabelledBy (item: object) {\n      const text = escapeHTML(this.getText(item).split(' ').join('-').toLowerCase())\n\n      return `${text}-list-item-${this._uid}`\n    },\n    getMaskedCharacters (text: string): {\n      start: string\n      middle: string\n      end: string\n    } {\n      const searchInput = (this.searchInput || '').toString().toLocaleLowerCase()\n      const index = text.toLocaleLowerCase().indexOf(searchInput)\n\n      if (index < 0) return { start: '', middle: text, end: '' }\n\n      const start = text.slice(0, index)\n      const middle = text.slice(index, index + searchInput.length)\n      const end = text.slice(index + searchInput.length)\n      return { start, middle, end }\n    },\n    genTile (\n      item: object,\n      disabled = null as null | boolean,\n      value = false\n    ): VNode | VNode[] | undefined {\n      if (!value) value = this.hasItem(item)\n\n      if (item === Object(item)) {\n        disabled = disabled !== null\n          ? disabled\n          : this.getDisabled(item)\n      }\n\n      const tile = {\n        attrs: {\n          // Default behavior in list does not\n          // contain aria-selected by default\n          'aria-selected': String(value),\n          'aria-labelledby': this.genLabelledBy(item),\n          role: 'option',\n        },\n        on: {\n          mousedown: (e: Event) => {\n            // Prevent onBlur from being called\n            e.preventDefault()\n          },\n          click: () => disabled || this.$emit('select', item),\n        },\n        props: {\n          activeClass: this.tileActiveClass,\n          disabled,\n          ripple: true,\n          inputValue: value,\n        },\n      }\n\n      if (!this.$scopedSlots.item) {\n        return this.$createElement(VListItem, tile, [\n          this.action && !this.hideSelected && this.items.length > 0\n            ? this.genAction(item, value)\n            : null,\n          this.genTileContent(item),\n        ])\n      }\n\n      const parent = this\n      const scopedSlot = this.$scopedSlots.item({\n        parent,\n        item,\n        attrs: {\n          ...tile.attrs,\n          ...tile.props,\n        },\n        on: tile.on,\n      })\n\n      return this.needsTile(scopedSlot)\n        ? this.$createElement(VListItem, tile, scopedSlot)\n        : scopedSlot\n    },\n    genTileContent (item: any): VNode {\n      const innerHTML = this.genFilteredText(this.getText(item))\n\n      return this.$createElement(VListItemContent,\n        [this.$createElement(VListItemTitle, {\n          attrs: { id: this.genLabelledBy(item) },\n          domProps: { innerHTML },\n        })]\n      )\n    },\n    hasItem (item: object) {\n      return this.parsedItems.indexOf(this.getValue(item)) > -1\n    },\n    needsTile (slot: VNode[] | undefined) {\n      return slot!.length !== 1 ||\n        slot![0].componentOptions == null ||\n        slot![0].componentOptions.Ctor.options.name !== 'v-list-item'\n    },\n    getDisabled (item: object) {\n      return Boolean(getPropertyFromItem(item, this.itemDisabled, false))\n    },\n    getText (item: object) {\n      return String(getPropertyFromItem(item, this.itemText, item))\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n  },\n\n  render (): VNode {\n    const children = []\n    for (const item of this.items) {\n      if (this.hideSelected &&\n        this.hasItem(item)\n      ) continue\n\n      if (item == null) children.push(this.genTile(item))\n      else if (item.header) children.push(this.genHeader(item))\n      else if (item.divider) children.push(this.genDivider(item))\n      else children.push(this.genTile(item))\n    }\n\n    children.length || children.push(this.$slots['no-data'] || this.staticNoDataTile)\n\n    this.$slots['prepend-item'] && children.unshift(this.$slots['prepend-item'])\n\n    this.$slots['append-item'] && children.push(this.$slots['append-item'])\n\n    return this.$createElement('div', {\n      staticClass: 'v-select-list v-card',\n      class: this.themeClasses,\n    }, [\n      this.$createElement(VList, {\n        attrs: {\n          id: this.$attrs.id,\n          role: 'listbox',\n          tabindex: -1,\n        },\n        props: { dense: this.dense },\n      }, children),\n    ])\n  },\n})\n","import Vue from 'vue'\nimport { PropValidator } from 'vue/types/options'\nimport { deepEqual } from '../../util/helpers'\n\nexport default Vue.extend({\n  name: 'comparable',\n  props: {\n    valueComparator: {\n      type: Function,\n      default: deepEqual,\n    } as any as PropValidator<typeof deepEqual>,\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'filterable',\n\n  props: {\n    noDataText: {\n      type: String,\n      default: '$vuetify.noDataText',\n    },\n  },\n})\n","// Styles\nimport '../VTextField/VTextField.sass'\nimport './VSelect.sass'\n\n// Components\nimport VChip from '../VChip'\nimport VMenu from '../VMenu'\nimport VSelectList from './VSelectList'\n\n// Extensions\nimport VTextField from '../VTextField/VTextField'\n\n// Mixins\nimport Comparable from '../../mixins/comparable'\nimport Filterable from '../../mixins/filterable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Utilities\nimport { getPropertyFromItem, keyCodes } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport mixins from '../../util/mixins'\nimport { PropValidator } from 'vue/types/options'\nimport { VNode, VNodeDirective } from 'vue'\n\nexport const defaultMenuProps = {\n  closeOnClick: false,\n  closeOnContentClick: false,\n  disableKeys: true,\n  openOnClick: false,\n  maxHeight: 304,\n}\n\n// Types\ntype ItemProperty = PropValidator<string | (string | number)[] | ((item: object, fallback?: any) => any)>\nconst baseMixins = mixins(\n  VTextField,\n  Comparable,\n  Filterable\n)\n\ninterface options extends InstanceType<typeof baseMixins> {\n  $refs: {\n    menu: InstanceType<typeof VMenu>\n    label: HTMLElement\n    input: HTMLInputElement\n    'prepend-inner': HTMLElement\n    prefix: HTMLElement\n    suffix: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-select',\n\n  directives: {\n    ClickOutside,\n  },\n\n  props: {\n    appendIcon: {\n      type: String,\n      default: '$dropdown',\n    },\n    attach: {\n      default: false,\n    } as PropValidator<string | boolean | Element | VNode>,\n    cacheItems: Boolean,\n    chips: Boolean,\n    clearable: Boolean,\n    deletableChips: Boolean,\n    eager: Boolean,\n    hideSelected: Boolean,\n    items: {\n      type: Array,\n      default: () => [],\n    },\n    itemColor: {\n      type: String,\n      default: 'primary',\n    },\n    itemDisabled: {\n      type: [String, Array, Function],\n      default: 'disabled',\n    } as ItemProperty,\n    itemText: {\n      type: [String, Array, Function],\n      default: 'text',\n    } as ItemProperty,\n    itemValue: {\n      type: [String, Array, Function],\n      default: 'value',\n    } as ItemProperty,\n    menuProps: {\n      type: [String, Array, Object],\n      default: () => defaultMenuProps,\n    },\n    multiple: Boolean,\n    openOnClear: Boolean,\n    returnObject: Boolean,\n    smallChips: Boolean,\n  },\n\n  data () {\n    return {\n      cachedItems: this.cacheItems ? this.items : [],\n      content: null as any,\n      isBooted: false,\n      isMenuActive: false,\n      lastItem: 20,\n      // As long as a value is defined, show it\n      // Otherwise, check if multiple\n      // to determine which default to provide\n      lazyValue: this.value !== undefined\n        ? this.value\n        : this.multiple ? [] : undefined,\n      selectedIndex: -1,\n      selectedItems: [] as any[],\n      keyboardLookupPrefix: '',\n      keyboardLookupLastTime: 0,\n    }\n  },\n\n  computed: {\n    /* All items that the select has */\n    allItems (): object[] {\n      return this.filterDuplicates(this.cachedItems.concat(this.items))\n    },\n    classes (): object {\n      return {\n        ...VTextField.options.computed.classes.call(this),\n        'v-select': true,\n        'v-select--chips': this.hasChips,\n        'v-select--chips--small': this.smallChips,\n        'v-select--is-menu-active': this.isMenuActive,\n        'v-select--is-multi': this.multiple,\n      }\n    },\n    /* Used by other components to overwrite */\n    computedItems (): object[] {\n      return this.allItems\n    },\n    computedOwns (): string {\n      return `list-${this._uid}`\n    },\n    counterValue (): number {\n      return this.multiple\n        ? this.selectedItems.length\n        : (this.getText(this.selectedItems[0]) || '').toString().length\n    },\n    directives (): VNodeDirective[] | undefined {\n      return this.isFocused ? [{\n        name: 'click-outside',\n        value: this.blur,\n        args: {\n          closeConditional: this.closeConditional,\n        },\n      } as VNodeDirective] : undefined\n    },\n    dynamicHeight () {\n      return 'auto'\n    },\n    hasChips (): boolean {\n      return this.chips || this.smallChips\n    },\n    hasSlot (): boolean {\n      return Boolean(this.hasChips || this.$scopedSlots.selection)\n    },\n    isDirty (): boolean {\n      return this.selectedItems.length > 0\n    },\n    listData (): object {\n      const scopeId = this.$vnode && (this.$vnode.context!.$options as { [key: string]: any })._scopeId\n      const attrs = scopeId ? {\n        [scopeId]: true,\n      } : {}\n\n      return {\n        attrs: {\n          ...attrs,\n          id: this.computedOwns,\n        },\n        props: {\n          action: this.multiple,\n          color: this.itemColor,\n          dense: this.dense,\n          hideSelected: this.hideSelected,\n          items: this.virtualizedItems,\n          itemDisabled: this.itemDisabled,\n          itemText: this.itemText,\n          itemValue: this.itemValue,\n          noDataText: this.$vuetify.lang.t(this.noDataText),\n          selectedItems: this.selectedItems,\n        },\n        on: {\n          select: this.selectItem,\n        },\n        scopedSlots: {\n          item: this.$scopedSlots.item,\n        },\n      }\n    },\n    staticList (): VNode {\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        consoleError('assert: staticList should not be called if slots are used')\n      }\n\n      return this.$createElement(VSelectList, this.listData)\n    },\n    virtualizedItems (): object[] {\n      return (this.$_menuProps as any).auto\n        ? this.computedItems\n        : this.computedItems.slice(0, this.lastItem)\n    },\n    menuCanShow: () => true,\n    $_menuProps (): object {\n      let normalisedProps = typeof this.menuProps === 'string'\n        ? this.menuProps.split(',')\n        : this.menuProps\n\n      if (Array.isArray(normalisedProps)) {\n        normalisedProps = normalisedProps.reduce((acc, p) => {\n          acc[p.trim()] = true\n          return acc\n        }, {})\n      }\n\n      return {\n        ...defaultMenuProps,\n        eager: this.eager,\n        value: this.menuCanShow && this.isMenuActive,\n        nudgeBottom: normalisedProps.offsetY ? 1 : 0, // convert to int\n        ...normalisedProps,\n      }\n    },\n  },\n\n  watch: {\n    internalValue (val) {\n      this.initialValue = val\n      this.setSelectedItems()\n    },\n    isBooted () {\n      this.$nextTick(() => {\n        if (this.content && this.content.addEventListener) {\n          this.content.addEventListener('scroll', this.onScroll, false)\n        }\n      })\n    },\n    isMenuActive (val) {\n      this.$nextTick(() => this.onMenuActiveChange(val))\n\n      if (!val) return\n\n      this.isBooted = true\n    },\n    items: {\n      immediate: true,\n      handler (val) {\n        if (this.cacheItems) {\n          // Breaks vue-test-utils if\n          // this isn't calculated\n          // on the next tick\n          this.$nextTick(() => {\n            this.cachedItems = this.filterDuplicates(this.cachedItems.concat(val))\n          })\n        }\n\n        this.setSelectedItems()\n      },\n    },\n  },\n\n  mounted () {\n    this.content = this.$refs.menu && (this.$refs.menu as { [key: string]: any }).$refs.content\n  },\n\n  methods: {\n    /** @public */\n    blur (e?: Event) {\n      VTextField.options.methods.blur.call(this, e)\n      this.isMenuActive = false\n      this.isFocused = false\n      this.selectedIndex = -1\n    },\n    /** @public */\n    activateMenu () {\n      if (\n        this.disabled ||\n        this.readonly ||\n        this.isMenuActive\n      ) return\n\n      this.isMenuActive = true\n    },\n    clearableCallback () {\n      this.setValue(this.multiple ? [] : undefined)\n      this.$nextTick(() => this.$refs.input && this.$refs.input.focus())\n\n      if (this.openOnClear) this.isMenuActive = true\n    },\n    closeConditional (e: Event) {\n      return (\n        !this._isDestroyed &&\n\n        // Click originates from outside the menu content\n        this.content &&\n        !this.content.contains(e.target) &&\n\n        // Click originates from outside the element\n        this.$el &&\n        !this.$el.contains(e.target as Node) &&\n        e.target !== this.$el\n      )\n    },\n    filterDuplicates (arr: any[]) {\n      const uniqueValues = new Map()\n      for (let index = 0; index < arr.length; ++index) {\n        const item = arr[index]\n        const val = this.getValue(item)\n\n        // TODO: comparator\n        !uniqueValues.has(val) && uniqueValues.set(val, item)\n      }\n      return Array.from(uniqueValues.values())\n    },\n    findExistingIndex (item: object) {\n      const itemValue = this.getValue(item)\n\n      return (this.internalValue || []).findIndex((i: object) => this.valueComparator(this.getValue(i), itemValue))\n    },\n    genChipSelection (item: object, index: number) {\n      const isDisabled = (\n        this.disabled ||\n        this.readonly ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement(VChip, {\n        staticClass: 'v-chip--select',\n        attrs: { tabindex: -1 },\n        props: {\n          close: this.deletableChips && !isDisabled,\n          disabled: isDisabled,\n          inputValue: index === this.selectedIndex,\n          small: this.smallChips,\n        },\n        on: {\n          click: (e: MouseEvent) => {\n            if (isDisabled) return\n\n            e.stopPropagation()\n\n            this.selectedIndex = index\n          },\n          'click:close': () => this.onChipInput(item),\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }, this.getText(item))\n    },\n    genCommaSelection (item: object, index: number, last: boolean) {\n      const color = index === this.selectedIndex && this.computedColor\n      const isDisabled = (\n        this.disabled ||\n        this.getDisabled(item)\n      )\n\n      return this.$createElement('div', this.setTextColor(color, {\n        staticClass: 'v-select__selection v-select__selection--comma',\n        class: {\n          'v-select__selection--disabled': isDisabled,\n        },\n        key: JSON.stringify(this.getValue(item)),\n      }), `${this.getText(item)}${last ? '' : ', '}`)\n    },\n    genDefaultSlot (): (VNode | VNode[] | null)[] {\n      const selections = this.genSelections()\n      const input = this.genInput()\n\n      // If the return is an empty array\n      // push the input\n      if (Array.isArray(selections)) {\n        selections.push(input)\n      // Otherwise push it into children\n      } else {\n        selections.children = selections.children || []\n        selections.children.push(input)\n      }\n\n      return [\n        this.genFieldset(),\n        this.$createElement('div', {\n          staticClass: 'v-select__slot',\n          directives: this.directives,\n        }, [\n          this.genLabel(),\n          this.prefix ? this.genAffix('prefix') : null,\n          selections,\n          this.suffix ? this.genAffix('suffix') : null,\n          this.genClearIcon(),\n          this.genIconSlot(),\n        ]),\n        this.genMenu(),\n        this.genProgress(),\n      ]\n    },\n    genInput (): VNode {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data!.domProps!.value = null\n      input.data!.attrs!.readonly = true\n      input.data!.attrs!.type = 'text'\n      input.data!.attrs!['aria-readonly'] = true\n      input.data!.on!.keypress = this.onKeyPress\n\n      return input\n    },\n    genInputSlot (): VNode {\n      const render = VTextField.options.methods.genInputSlot.call(this)\n\n      render.data!.attrs = {\n        ...render.data!.attrs,\n        role: 'button',\n        'aria-haspopup': 'listbox',\n        'aria-expanded': String(this.isMenuActive),\n        'aria-owns': this.computedOwns,\n      }\n\n      return render\n    },\n    genList (): VNode {\n      // If there's no slots, we can use a cached VNode to improve performance\n      if (this.$slots['no-data'] || this.$slots['prepend-item'] || this.$slots['append-item']) {\n        return this.genListWithSlot()\n      } else {\n        return this.staticList\n      }\n    },\n    genListWithSlot (): VNode {\n      const slots = ['prepend-item', 'no-data', 'append-item']\n        .filter(slotName => this.$slots[slotName])\n        .map(slotName => this.$createElement('template', {\n          slot: slotName,\n        }, this.$slots[slotName]))\n      // Requires destructuring due to Vue\n      // modifying the `on` property when passed\n      // as a referenced object\n      return this.$createElement(VSelectList, {\n        ...this.listData,\n      }, slots)\n    },\n    genMenu (): VNode {\n      const props = this.$_menuProps as any\n      props.activator = this.$refs['input-slot']\n\n      // Attach to root el so that\n      // menu covers prepend/append icons\n      if (\n        // TODO: make this a computed property or helper or something\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) {\n        props.attach = this.$el\n      } else {\n        props.attach = this.attach\n      }\n\n      return this.$createElement(VMenu, {\n        attrs: { role: undefined },\n        props,\n        on: {\n          input: (val: boolean) => {\n            this.isMenuActive = val\n            this.isFocused = val\n          },\n        },\n        ref: 'menu',\n      }, [this.genList()])\n    },\n    genSelections (): VNode {\n      let length = this.selectedItems.length\n      const children = new Array(length)\n\n      let genSelection\n      if (this.$scopedSlots.selection) {\n        genSelection = this.genSlotSelection\n      } else if (this.hasChips) {\n        genSelection = this.genChipSelection\n      } else {\n        genSelection = this.genCommaSelection\n      }\n\n      while (length--) {\n        children[length] = genSelection(\n          this.selectedItems[length],\n          length,\n          length === children.length - 1\n        )\n      }\n\n      return this.$createElement('div', {\n        staticClass: 'v-select__selections',\n      }, children)\n    },\n    genSlotSelection (item: object, index: number): VNode[] | undefined {\n      return this.$scopedSlots.selection!({\n        attrs: {\n          class: 'v-chip--select',\n        },\n        parent: this,\n        item,\n        index,\n        select: (e: Event) => {\n          e.stopPropagation()\n          this.selectedIndex = index\n        },\n        selected: index === this.selectedIndex,\n        disabled: this.disabled || this.readonly,\n      })\n    },\n    getMenuIndex () {\n      return this.$refs.menu ? (this.$refs.menu as { [key: string]: any }).listIndex : -1\n    },\n    getDisabled (item: object) {\n      return getPropertyFromItem(item, this.itemDisabled, false)\n    },\n    getText (item: object) {\n      return getPropertyFromItem(item, this.itemText, item)\n    },\n    getValue (item: object) {\n      return getPropertyFromItem(item, this.itemValue, this.getText(item))\n    },\n    onBlur (e?: Event) {\n      e && this.$emit('blur', e)\n    },\n    onChipInput (item: object) {\n      if (this.multiple) this.selectItem(item)\n      else this.setValue(null)\n      // If all items have been deleted,\n      // open `v-menu`\n      if (this.selectedItems.length === 0) {\n        this.isMenuActive = true\n      } else {\n        this.isMenuActive = false\n      }\n      this.selectedIndex = -1\n    },\n    onClick () {\n      if (this.isDisabled) return\n\n      this.isMenuActive = true\n\n      if (!this.isFocused) {\n        this.isFocused = true\n        this.$emit('focus')\n      }\n    },\n    onEscDown (e: Event) {\n      e.preventDefault()\n      if (this.isMenuActive) {\n        e.stopPropagation()\n        this.isMenuActive = false\n      }\n    },\n    onKeyPress (e: KeyboardEvent) {\n      if (\n        this.multiple ||\n        this.readonly\n      ) return\n\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000 // milliseconds\n      const now = performance.now()\n      if (now - this.keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        this.keyboardLookupPrefix = ''\n      }\n      this.keyboardLookupPrefix += e.key.toLowerCase()\n      this.keyboardLookupLastTime = now\n\n      const index = this.allItems.findIndex(item => {\n        const text = (this.getText(item) || '').toString()\n\n        return text.toLowerCase().startsWith(this.keyboardLookupPrefix)\n      })\n      const item = this.allItems[index]\n      if (index !== -1) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        setTimeout(() => this.setMenuIndex(index))\n      }\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n      const menu = this.$refs.menu\n\n      // If enter, space, open menu\n      if ([\n        keyCodes.enter,\n        keyCodes.space,\n      ].includes(keyCode)) this.activateMenu()\n\n      if (!menu) return\n\n      // If menu is active, allow default\n      // listIndex change from menu\n      if (this.isMenuActive && keyCode !== keyCodes.tab) {\n        this.$nextTick(() => {\n          menu.changeListIndex(e)\n          this.$emit('update:list-index', menu.listIndex)\n        })\n      }\n\n      // If menu is not active, up and down can do\n      // one of 2 things. If multiple, opens the\n      // menu, if not, will cycle through all\n      // available options\n      if (\n        !this.isMenuActive &&\n        [keyCodes.up, keyCodes.down].includes(keyCode)\n      ) return this.onUpDown(e)\n\n      // If escape deactivate the menu\n      if (keyCode === keyCodes.esc) return this.onEscDown(e)\n\n      // If tab - select item or close menu\n      if (keyCode === keyCodes.tab) return this.onTabDown(e)\n\n      // If space preventDefault\n      if (keyCode === keyCodes.space) return this.onSpaceDown(e)\n    },\n    onMenuActiveChange (val: boolean) {\n      // If menu is closing and mulitple\n      // or menuIndex is already set\n      // skip menu index recalculation\n      if (\n        (this.multiple && !val) ||\n        this.getMenuIndex() > -1\n      ) return\n\n      const menu = this.$refs.menu\n\n      if (!menu || !this.isDirty) return\n\n      // When menu opens, set index of first active item\n      for (let i = 0; i < menu.tiles.length; i++) {\n        if (menu.tiles[i].getAttribute('aria-selected') === 'true') {\n          this.setMenuIndex(i)\n          break\n        }\n      }\n    },\n    onMouseUp (e: MouseEvent) {\n      if (this.hasMouseDown && e.which !== 3) {\n        const appendInner = this.$refs['append-inner']\n\n        // If append inner is present\n        // and the target is itself\n        // or inside, toggle menu\n        if (this.isMenuActive &&\n          appendInner &&\n          (appendInner === e.target ||\n          (appendInner as { [key: string]: any }).contains(e.target))\n        ) {\n          this.$nextTick(() => (this.isMenuActive = !this.isMenuActive))\n        // If user is clicking in the container\n        // and field is enclosed, activate it\n        } else if (this.isEnclosed && !this.isDisabled) {\n          this.isMenuActive = true\n        }\n      }\n\n      VTextField.options.methods.onMouseUp.call(this, e)\n    },\n    onScroll () {\n      if (!this.isMenuActive) {\n        requestAnimationFrame(() => (this.content.scrollTop = 0))\n      } else {\n        if (this.lastItem >= this.computedItems.length) return\n\n        const showMoreItems = (\n          this.content.scrollHeight -\n          (this.content.scrollTop +\n          this.content.clientHeight)\n        ) < 200\n\n        if (showMoreItems) {\n          this.lastItem += 20\n        }\n      }\n    },\n    onSpaceDown (e: KeyboardEvent) {\n      e.preventDefault()\n    },\n    onTabDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      const activeTile = menu.activeTile\n\n      // An item that is selected by\n      // menu-index should toggled\n      if (\n        !this.multiple &&\n        activeTile &&\n        this.isMenuActive\n      ) {\n        e.preventDefault()\n        e.stopPropagation()\n\n        activeTile.click()\n      } else {\n        // If we make it here,\n        // the user has no selected indexes\n        // and is probably tabbing out\n        this.blur(e)\n      }\n    },\n    onUpDown (e: KeyboardEvent) {\n      const menu = this.$refs.menu\n\n      if (!menu) return\n\n      e.preventDefault()\n\n      // Multiple selects do not cycle their value\n      // when pressing up or down, instead activate\n      // the menu\n      if (this.multiple) return this.activateMenu()\n\n      const keyCode = e.keyCode\n\n      // Cycle through available values to achieve\n      // select native behavior\n      menu.getTiles()\n      keyCodes.up === keyCode ? menu.prevTile() : menu.nextTile()\n      menu.activeTile && menu.activeTile.click()\n    },\n    selectItem (item: object) {\n      if (!this.multiple) {\n        this.setValue(this.returnObject ? item : this.getValue(item))\n        this.isMenuActive = false\n      } else {\n        const internalValue = (this.internalValue || []).slice()\n        const i = this.findExistingIndex(item)\n\n        i !== -1 ? internalValue.splice(i, 1) : internalValue.push(item)\n        this.setValue(internalValue.map((i: object) => {\n          return this.returnObject ? i : this.getValue(i)\n        }))\n\n        // When selecting multiple\n        // adjust menu after each\n        // selection\n        this.$nextTick(() => {\n          this.$refs.menu &&\n            (this.$refs.menu as { [key: string]: any }).updateDimensions()\n        })\n\n        // We only need to reset list index for multiple\n        // to keep highlight when an item is toggled\n        // on and off\n        if (!this.multiple) return\n\n        const listIndex = this.getMenuIndex()\n\n        this.setMenuIndex(-1)\n\n        // There is no item to re-highlight\n        // when selections are hidden\n        if (this.hideSelected) return\n\n        this.$nextTick(() => this.setMenuIndex(listIndex))\n      }\n    },\n    setMenuIndex (index: number) {\n      this.$refs.menu && ((this.$refs.menu as { [key: string]: any }).listIndex = index)\n    },\n    setSelectedItems () {\n      const selectedItems = []\n      const values = !this.multiple || !Array.isArray(this.internalValue)\n        ? [this.internalValue]\n        : this.internalValue\n\n      for (const value of values) {\n        const index = this.allItems.findIndex(v => this.valueComparator(\n          this.getValue(v),\n          this.getValue(value)\n        ))\n\n        if (index > -1) {\n          selectedItems.push(this.allItems[index])\n        }\n      }\n\n      this.selectedItems = selectedItems\n    },\n    setValue (value: any) {\n      const oldValue = this.internalValue\n      this.internalValue = value\n      value !== oldValue && this.$emit('change', value)\n    },\n  },\n})\n"],"sourceRoot":""}